// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReactFromHtml#parse does not render react-reserved attributes 1`] = `
<div>
  <div />
</div>
`;

exports[`ReactFromHtml#parse renders <input/> with defaultValue 1`] = `
<div>
  <input
    defaultValue="foo"
    disabled={true}
    size={10}
    type="text"
  />
</div>
`;

exports[`ReactFromHtml#parse renders <script/> with dangerouslySetInnerHTML 1`] = `
<div>
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "console.log('Hello <strong>React</strong> world!');",
      }
    }
  />
</div>
`;

exports[`ReactFromHtml#parse renders <style/> with dangerouslySetInnerHTML 1`] = `
<div>
  <style
    dangerouslySetInnerHTML={
      Object {
        "__html": "/* Hello <strong>React</strong> world! */",
      }
    }
  />
</div>
`;

exports[`ReactFromHtml#parse renders <textarea/> with defaultValue, instead of children 1`] = `
<div>
  <textarea
    defaultValue="/* Hello <strong>React</strong> world! */"
  />
</div>
`;

exports[`ReactFromHtml#parse renders elements with the style attribute 1`] = `
<div>
  <label
    style={
      Object {
        "color": "red",
        "fontSize": "20px",
        "fontWeight": "normal",
        "opacity": 0.5,
        "zIndex": 99,
      }
    }
  >
    Hello, world!
  </label>
</div>
`;

exports[`ReactFromHtml#parse renders for as htmlFor 1`] = `
<div>
  <label
    htmlFor="foo"
  >
    <input
      id="foo"
    />
  </label>
</div>
`;

exports[`ReactFromHtml#parse renders multiple blocks of HTML elements correctly 1`] = `
<div>
  
          
  <p>
    Hello, 
    <strong>
      React
    </strong>
     world!
  </p>
  
          
  <p>
    Hello, 
    <strong>
      React
    </strong>
     world!
  </p>
  
          
  <p>
    Hello, 
    <strong>
      React
    </strong>
     world!
  </p>
  
        
</div>
`;

exports[`ReactFromHtml#parse renders single block of HTML elements correctly 1`] = `
<div>
  <p
    className="hello"
  >
    Hello, 
    <strong>
      React
    </strong>
     world!
  </p>
</div>
`;
